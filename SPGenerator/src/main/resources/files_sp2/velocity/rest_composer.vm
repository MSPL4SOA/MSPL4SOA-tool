package $composerPkg;

import javax.naming.InitialContext;

import org.switchyard.Exchange;
import org.switchyard.Message;
import org.switchyard.component.resteasy.composer.RESTEasyBindingData;
import org.switchyard.component.resteasy.composer.RESTEasyMessageComposer;

#foreach($capability in $service.capabilities)
#if($capability.serviceState == true)
import $statePkg#[[.]]#$capability.stateClassName;
#end
#end

#foreach($capability in $service.capabilities)
#if($capability.inputs.size() != 0)
import $inputDataPkg#[[.]]#$capability.dataInputClassName;
#end
#end

public class $composerFileName extends RESTEasyMessageComposer {
	#set ($stateInstance = "instance")

#foreach($capability in $service.capabilities)
#if($capability.stateMessaging == true)
	$capability.stateClassName $stateInstance$capability.stateClassName;
#end
#end
	
	@Override
	public Message compose(RESTEasyBindingData source, Exchange exchange) throws Exception {
	
		final Message message = super.compose(source, exchange);
		String opName = exchange.getContract().getConsumerOperation().getName();

		#foreach($capability in $service.capabilities)
		#if($capability.inputs.size() != 0)
		
		if#[[(]]#opName.equals#[[(]]#"$capability.name"))
		{
			$capability.dataInputClassName in = new $capability.dataInputClassName#[[(]]#);
			
			#set ($increment = 0)
			#foreach($input in $capability.inputs)
			in.set$input.name.substring(0,1).toUpperCase()$input.name.substring(1)(($input.type) source.getParameters()[$increment]);
			#set ($increment = $increment + 1)
			#end
			message.setContent(in);
		}
		
		#end
		#end

		return message;
	}
	
	@Override
	public RESTEasyBindingData decompose(Exchange exchange, RESTEasyBindingData target) throws Exception {
	
	InitialContext ctx = new InitialContext();
	String opName = exchange.getContract().getProviderOperation().getName();
	
	#foreach($capability in $service.capabilities)
	#if($capability.stateMessaging == true)
	#set ($stateCapabilityInstance = $stateInstance + $capability.stateClassName)
	
	$stateCapabilityInstance = ($capability.stateClassName) ctx
					.lookup("java:global/$artifactId/$capability.stateClassName");
	
		if#[[(]]#opName.equals#[[(]]#"$capability.name"))
		target.addHeader("$STATE_HEADER_NAME", $stateCapabilityInstance#[[.]]#getState#[[(]]#)#[[.]]#toString());
		#if($capability.statefullService == false)
		$stateCapabilityInstance#[[.]]#setState#[[(]]#null);
		#end
	#end
	#end
	
		return super.decompose(exchange, target);
	}
}