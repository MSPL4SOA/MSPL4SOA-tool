package $inputDataPkg;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
  #foreach($input in $capability.inputs)
 * &lt;element name="$input.name" type="{http://www.w3.org/2001/XMLSchema}$input.type"/>
   #end
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    #foreach($input in $capability.inputs)
    	"$input.name"
    	#if($foreach.count != $capability.inputs.size()) 
            , 
        #end
    #end
})
@XmlRootElement(name = "$capability.dataInputClassName.substring(0,1).toLowerCase()$capability.dataInputClassName.substring(1)")
public class $capability.dataInputClassName {

    	#foreach($input in $capability.inputs)
    		@XmlElement(required = true)
    		protected $input.type $input.name;
    	#end

		#foreach($input in $capability.inputs)
    		public $input.type get$input.name.substring(0,1).toUpperCase()$input.name.substring(1)()
    		{
    			return $input.name;
    		}
    	#end
    	
    	#foreach($input in $capability.inputs)
    		public void set$input.name.substring(0,1).toUpperCase()$input.name.substring(1)($input.type value)
    		{
    			this.$input.name = value;
    		}
    	#end

}