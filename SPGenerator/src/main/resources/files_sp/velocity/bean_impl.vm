package $servicePkg;

import org.switchyard.component.bean.Service;
import javax.inject.Inject;
import org.switchyard.Context;

#foreach($capability in $service.capabilities)
#if($capability.inputs.size() != 0)
import $inputDataPkg#[[.]]#$capability.dataInputClassName;
#end
#end

#foreach($capability in $service.capabilities)
#if($capability.outputs.size() != 0)
import $outputDataPkg#[[.]]#$capability.dataOutputClassName;
#end
#end


#foreach($capability in $service.capabilities)
#if($capability.serviceState == true)
import $statePkg#[[.]]#$capability.stateClassName;
#end
#end

import $authFilePkg;

#set ($quote = '"')

@Service($service.interfaceName#[[.]]#class)
public class $service.beanName implements $service.interfaceName {

	@Inject
	private Context context;

#set ($stateInstance = "instance")

#foreach($capability in $service.capabilities)
#if($capability.serviceState == true)
	@Inject
	$capability.stateClassName $stateInstance$capability.stateClassName;
#end
#end


#foreach($capability in $service.capabilities)
#set ($stateCapabilityInstance = $stateInstance + $capability.stateClassName)
#set ($datainputInstance = $capability.dataInputClassName.substring(0,1).toLowerCase() + $capability.dataInputClassName.substring(1))

	@Override
    public #if($capability.outputs.size() != 0) $capability.dataOutputClassName #else void #end $capability.name (
    	    #if($capability.inputs.size() != 0) 
               $capability.dataInputClassName $datainputInstance
            #end
    ){ 
    // TODO Auto-generated stub
    
    System.out.println("\\\\******* The output of $service.interfaceName : $capability.name : ********//");
    
    #foreach($input in $capability.inputs)
    	System.out.println("$input.name : " + $datainputInstance#[[.]]#get$input.name.substring(0,1).toUpperCase()$input.name.substring(1)#[[(]]#));
    #end
    
    
    #if($capability.outputs.size() != 0)
    $capability.dataOutputClassName out = new $capability.dataOutputClassName#[[(]]#);
    
    #foreach($output in $capability.outputs)
    	#set ($value = "")
    	#if($output.type == "String")
    		#set ($value = ${quote} + $capability.name + ${quote})
    	#else
    		#set ($value = $output.type + ".valueOf(${quote}" + $math.random(1,1000) +"${quote})")
    	#end
    	
    	out.set$output.name.substring(0,1).toUpperCase()$output.name.substring(1)($value);
    #end
    
    #end
     
     
     #if($capability.authentification == true)
     boolean checkAuth = $AUTH_FILE_NAME#[[.]]#checkAuthentification(context);  
     if(checkAuth == true){
   	 	// TODO Auto-generated stub
   	 	System.out.println("Correct authentification");
   	 }
   	 else{
   	 // TODO Auto-generated stub
   	 	System.out.println("Incorrect authentification");
   	 }
   	 #end
   	 
   	#if($capability.twoWayState == true)
   	// TODO Auto-generated stub
		System.out.println("State header in: " + $AUTH_FILE_NAME#[[.]]#getConsumerState(context));
	#end
   	 
    #if($capability.serviceState == true)
    	$stateCapabilityInstance#[[.]]#setState#[[(]]#$stateCapabilityInstance#[[.]]#getState#[[(]]#) + " $service.interfaceName $capability.name");
    #end
    
    #if($capability.outputs.size() != 0)
    return out; 
    #end
    }
#end

}
